import{s as Cs,e as d,t as F,a as E,c as u,h as J,j as $,f as a,b as _,g as cs,d as W,i as o,k as A,l as _s,m as hs,n as xs}from"../chunks/scheduler.24DCJvkM.js";import{S as ws,i as vs,c,a as i,m as y,t as D,b as B,d as f}from"../chunks/index.Bxj0scGo.js";import{C as K}from"../chunks/CodeFence.D4x2pz9j.js";import{C as us}from"../chunks/CodeInline.CNHAPpq4.js";/* empty css                                                         */import{A as bs}from"../chunks/Admonition.ICdh80Or.js";import"../chunks/entry.DxSwjjPG.js";import{L as gs}from"../chunks/Link.Bjs3rKGL.js";import{f as ks}from"../chunks/kit-docs.BQQ7NQzG.js";function js(m){let n;return{c(){n=F("#")},l(t){n=$(t,"#")},m(t,p){o(t,n,p)},d(t){t&&a(n)}}}function Rs(m){let n;return{c(){n=F("#")},l(t){n=$(t,"#")},m(t,p){o(t,n,p)},d(t){t&&a(n)}}}function Is(m){let n;return{c(){n=F("#")},l(t){n=$(t,"#")},m(t,p){o(t,n,p)},d(t){t&&a(n)}}}function Vs(m){let n,t="Applying the default Variant <em>will not</em> remove any NBT the Variant has modified due to bone configs.",p,r,C="You will have to manually reset the NBT to it's default state, or re-summon the Rig Instance.";return{c(){n=d("p"),n.innerHTML=t,p=E(),r=d("p"),r.textContent=C},l(l){n=u(l,"P",{"data-svelte-h":!0}),cs(n)!=="svelte-bozem"&&(n.innerHTML=t),p=_(l),r=u(l,"P",{"data-svelte-h":!0}),cs(r)!=="svelte-ok22dz"&&(r.textContent=C)},m(l,b){o(l,n,b),o(l,p,b),o(l,r,b)},p:xs,d(l){l&&(a(n),a(p),a(r))}}}function Ms(m){let n,t=m[0].title+"",p,r,C,l=m[0].description+"",b,ss,h,k,is,es,M,As="Before we can control a Rig Instance, we need to be able to select it. The following selectors can be used to select Rig Instances:",ns,P,S,x,j,ys,as,g,Ds,T,Bs,H,fs,ts,L,z,N,w,R,ms,os,I,Fs,q,$s,ps,X,Y,Es="There is no way to remove a Variant individually once it has been applied. To reset the Variant to it's default state, you can apply the default Variant.",ls,G,V,O;return k=new gs({props:{class:"header-anchor",href:"#selecting-the-rig-instance","aria-hidden":"true",$$slots:{default:[js]},$$scope:{ctx:m}}}),P=new K({props:{title:"Select all Rig Instances ",lang:"rust",ext:"rs",linesCount:2,rawCode:`@e[type=item_display,tag=aj.global.root]
`,showCopyCode:!0,code:`<pre class="shiki " style="background-color: #fff" tabindex="0"><code><span class="line"><span style="color: #89DDFF">@</span><span style="color: #BABED8">e</span><span style="color: #89DDFF">[</span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">item_display</span><span style="color: #89DDFF">,</span><span style="color: #BABED8">tag</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">aj</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">global</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">root</span><span style="color: #89DDFF">]</span></span>
<span class="line"></span></code></pre>`}}),S=new K({props:{title:"Select all Rig Instances from a specific Blueprint ",lang:"rust",ext:"rs",linesCount:2,rawCode:`@e[type=item_display, tag=aj.<export_namespace>.root]
`,showCopyCode:!0,code:`<pre class="shiki " style="background-color: #fff" tabindex="0"><code><span class="line"><span style="color: #89DDFF">@</span><span style="color: #BABED8">e</span><span style="color: #89DDFF">[</span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">item_display</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> tag</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">aj</span><span style="color: #89DDFF">.&lt;</span><span style="color: #BABED8">export_namespace</span><span style="color: #89DDFF">&gt;.</span><span style="color: #BABED8">root</span><span style="color: #89DDFF">]</span></span>
<span class="line"></span></code></pre>`}}),j=new gs({props:{class:"header-anchor",href:"#moving-and-rotating-the-rig-instance","aria-hidden":"true",$$slots:{default:[Rs]},$$scope:{ctx:m}}}),T=new us({props:{code:"tp"}}),H=new us({props:{code:"rotate"}}),L=new K({props:{title:"Move a Rig Instance 5 blocks towards positive X ",lang:"rust",ext:"rs",linesCount:3,rawCode:`execute as @e[type=item_display,tag=aj.<export_namespace>.root] at @s run \\
	tp @s ~5 ~ ~
`,showCopyCode:!0,code:`<pre class="shiki " style="background-color: #fff" tabindex="0"><code><span class="line"><span style="color: #BABED8">execute </span><span style="color: #F78C6C">as</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">e</span><span style="color: #89DDFF">[</span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">item_display</span><span style="color: #89DDFF">,</span><span style="color: #BABED8">tag</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">aj</span><span style="color: #89DDFF">.&lt;</span><span style="color: #BABED8">export_namespace</span><span style="color: #89DDFF">&gt;.</span><span style="color: #BABED8">root</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> at </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">s run \\</span></span>
<span class="line"><span style="color: #BABED8">	tp </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">s ~</span><span style="color: #F78C6C">5</span><span style="color: #BABED8"> ~ ~</span></span>
<span class="line"></span></code></pre>`}}),z=new K({props:{title:"Rotate a Rig Instance 90 degrees ",lang:"rust",ext:"rs",linesCount:3,rawCode:`execute as @e[type=item_display,tag=aj.<export_namespace>.root] at @s run \\
	rotate @s ~90 ~
`,showCopyCode:!0,code:`<pre class="shiki " style="background-color: #fff" tabindex="0"><code><span class="line"><span style="color: #BABED8">execute </span><span style="color: #F78C6C">as</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">e</span><span style="color: #89DDFF">[</span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">item_display</span><span style="color: #89DDFF">,</span><span style="color: #BABED8">tag</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">aj</span><span style="color: #89DDFF">.&lt;</span><span style="color: #BABED8">export_namespace</span><span style="color: #89DDFF">&gt;.</span><span style="color: #BABED8">root</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> at </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">s run \\</span></span>
<span class="line"><span style="color: #BABED8">	rotate </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">s ~</span><span style="color: #F78C6C">90</span><span style="color: #BABED8"> ~</span></span>
<span class="line"></span></code></pre>`}}),N=new K({props:{title:"Move a Rig Instance 5 blocks upwards and rotate it 90 degrees ",lang:"rust",ext:"rs",linesCount:3,rawCode:`execute as @e[type=item_display,tag=aj.<export_namespace>.root] at @s run \\
	tp @s ~ ~5 ~ ~90 ~
`,showCopyCode:!0,code:`<pre class="shiki " style="background-color: #fff" tabindex="0"><code><span class="line"><span style="color: #BABED8">execute </span><span style="color: #F78C6C">as</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">e</span><span style="color: #89DDFF">[</span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">item_display</span><span style="color: #89DDFF">,</span><span style="color: #BABED8">tag</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">aj</span><span style="color: #89DDFF">.&lt;</span><span style="color: #BABED8">export_namespace</span><span style="color: #89DDFF">&gt;.</span><span style="color: #BABED8">root</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> at </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">s run \\</span></span>
<span class="line"><span style="color: #BABED8">	tp </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">s ~ ~</span><span style="color: #F78C6C">5</span><span style="color: #BABED8"> ~ ~</span><span style="color: #F78C6C">90</span><span style="color: #BABED8"> ~</span></span>
<span class="line"></span></code></pre>`}}),R=new gs({props:{class:"header-anchor",href:"#applying-variants","aria-hidden":"true",$$slots:{default:[Is]},$$scope:{ctx:m}}}),q=new us({props:{code:"apply"}}),X=new K({props:{title:"Apply the angry Variant ",lang:"rust",ext:"rs",linesCount:3,rawCode:`execute as @e[type=item_display,tag=aj.<export_namespace>.root] run \\
	function animated_java:<export_namespace>/variants/angry/apply
`,showCopyCode:!0,code:`<pre class="shiki " style="background-color: #fff" tabindex="0"><code><span class="line"><span style="color: #BABED8">execute </span><span style="color: #F78C6C">as</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">e</span><span style="color: #89DDFF">[</span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">item_display</span><span style="color: #89DDFF">,</span><span style="color: #BABED8">tag</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">aj</span><span style="color: #89DDFF">.&lt;</span><span style="color: #BABED8">export_namespace</span><span style="color: #89DDFF">&gt;.</span><span style="color: #BABED8">root</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> run \\</span></span>
<span class="line"><span style="color: #BABED8">	function animated_java</span><span style="color: #89DDFF">:&lt;</span><span style="color: #BABED8">export_namespace</span><span style="color: #89DDFF">&gt;/</span><span style="color: #BABED8">variants</span><span style="color: #89DDFF">/</span><span style="color: #BABED8">angry</span><span style="color: #89DDFF">/</span><span style="color: #BABED8">apply</span></span>
<span class="line"></span></code></pre>`}}),G=new K({props:{title:"Apply the default Variant ",lang:"rust",ext:"rs",linesCount:3,rawCode:`execute as @e[type=item_display,tag=aj.<export_namespace>.root] run \\
	function animated_java:<export_namespace>/variants/default/apply
`,showCopyCode:!0,code:`<pre class="shiki " style="background-color: #fff" tabindex="0"><code><span class="line"><span style="color: #BABED8">execute </span><span style="color: #F78C6C">as</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">@</span><span style="color: #BABED8">e</span><span style="color: #89DDFF">[</span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">item_display</span><span style="color: #89DDFF">,</span><span style="color: #BABED8">tag</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">aj</span><span style="color: #89DDFF">.&lt;</span><span style="color: #BABED8">export_namespace</span><span style="color: #89DDFF">&gt;.</span><span style="color: #BABED8">root</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> run \\</span></span>
<span class="line"><span style="color: #BABED8">	function animated_java</span><span style="color: #89DDFF">:&lt;</span><span style="color: #BABED8">export_namespace</span><span style="color: #89DDFF">&gt;/</span><span style="color: #BABED8">variants</span><span style="color: #89DDFF">/</span><span style="color: #BABED8">default</span><span style="color: #89DDFF">/</span><span style="color: #BABED8">apply</span></span>
<span class="line"></span></code></pre>`}}),V=new bs({props:{type:"warning",$$slots:{default:[Vs]},$$scope:{ctx:m}}}),{c(){n=d("h1"),p=F(t),r=E(),C=d("p"),b=F(l),ss=E(),h=d("h2"),c(k.$$.fragment),is=F(" Selecting the Rig Instance"),es=E(),M=d("p"),M.textContent=As,ns=E(),c(P.$$.fragment),c(S.$$.fragment),x=d("h2"),c(j.$$.fragment),ys=F(" Moving and Rotating the Rig Instance"),as=E(),g=d("p"),Ds=F("Similar to how we control normal entities in Minecraft, we can move and rotate Rig Instances using the "),c(T.$$.fragment),Bs=F(" or "),c(H.$$.fragment),fs=F(" command."),ts=E(),c(L.$$.fragment),c(z.$$.fragment),c(N.$$.fragment),w=d("h2"),c(R.$$.fragment),ms=F(" Applying Variants"),os=E(),I=d("p"),Fs=F("Variants can be applied to the Rig Instance using the desired Variant's "),c(q.$$.fragment),$s=F(" function."),ps=E(),c(X.$$.fragment),Y=d("p"),Y.textContent=Es,ls=E(),c(G.$$.fragment),c(V.$$.fragment),this.h()},l(s){n=u(s,"H1",{});var e=J(n);p=$(e,t),e.forEach(a),r=_(s),C=u(s,"P",{});var Z=J(C);b=$(Z,l),Z.forEach(a),ss=_(s),h=u(s,"H2",{id:!0,tabindex:!0});var Q=J(h);i(k.$$.fragment,Q),is=$(Q," Selecting the Rig Instance"),Q.forEach(a),es=_(s),M=u(s,"P",{"data-svelte-h":!0}),cs(M)!=="svelte-sabk1p"&&(M.textContent=As),ns=_(s),i(P.$$.fragment,s),i(S.$$.fragment,s),x=u(s,"H2",{id:!0,tabindex:!0});var U=J(x);i(j.$$.fragment,U),ys=$(U," Moving and Rotating the Rig Instance"),U.forEach(a),as=_(s),g=u(s,"P",{});var v=J(g);Ds=$(v,"Similar to how we control normal entities in Minecraft, we can move and rotate Rig Instances using the "),i(T.$$.fragment,v),Bs=$(v," or "),i(H.$$.fragment,v),fs=$(v," command."),v.forEach(a),ts=_(s),i(L.$$.fragment,s),i(z.$$.fragment,s),i(N.$$.fragment,s),w=u(s,"H2",{id:!0,tabindex:!0});var ds=J(w);i(R.$$.fragment,ds),ms=$(ds," Applying Variants"),ds.forEach(a),os=_(s),I=u(s,"P",{});var rs=J(I);Fs=$(rs,"Variants can be applied to the Rig Instance using the desired Variant's "),i(q.$$.fragment,rs),$s=$(rs," function."),rs.forEach(a),ps=_(s),i(X.$$.fragment,s),Y=u(s,"P",{"data-svelte-h":!0}),cs(Y)!=="svelte-1i4mmxs"&&(Y.textContent=Es),ls=_(s),i(G.$$.fragment,s),i(V.$$.fragment,s),this.h()},h(){W(h,"id","selecting-the-rig-instance"),W(h,"tabindex","-1"),W(x,"id","moving-and-rotating-the-rig-instance"),W(x,"tabindex","-1"),W(w,"id","applying-variants"),W(w,"tabindex","-1")},m(s,e){o(s,n,e),A(n,p),o(s,r,e),o(s,C,e),A(C,b),o(s,ss,e),o(s,h,e),y(k,h,null),A(h,is),o(s,es,e),o(s,M,e),o(s,ns,e),y(P,s,e),y(S,s,e),o(s,x,e),y(j,x,null),A(x,ys),o(s,as,e),o(s,g,e),A(g,Ds),y(T,g,null),A(g,Bs),y(H,g,null),A(g,fs),o(s,ts,e),y(L,s,e),y(z,s,e),y(N,s,e),o(s,w,e),y(R,w,null),A(w,ms),o(s,os,e),o(s,I,e),A(I,Fs),y(q,I,null),A(I,$s),o(s,ps,e),y(X,s,e),o(s,Y,e),o(s,ls,e),y(G,s,e),y(V,s,e),O=!0},p(s,[e]){(!O||e&1)&&t!==(t=s[0].title+"")&&_s(p,t),(!O||e&1)&&l!==(l=s[0].description+"")&&_s(b,l);const Z={};e&2&&(Z.$$scope={dirty:e,ctx:s}),k.$set(Z);const Q={};e&2&&(Q.$$scope={dirty:e,ctx:s}),j.$set(Q);const U={};e&2&&(U.$$scope={dirty:e,ctx:s}),R.$set(U);const v={};e&2&&(v.$$scope={dirty:e,ctx:s}),V.$set(v)},i(s){O||(D(k.$$.fragment,s),D(P.$$.fragment,s),D(S.$$.fragment,s),D(j.$$.fragment,s),D(T.$$.fragment,s),D(H.$$.fragment,s),D(L.$$.fragment,s),D(z.$$.fragment,s),D(N.$$.fragment,s),D(R.$$.fragment,s),D(q.$$.fragment,s),D(X.$$.fragment,s),D(G.$$.fragment,s),D(V.$$.fragment,s),O=!0)},o(s){B(k.$$.fragment,s),B(P.$$.fragment,s),B(S.$$.fragment,s),B(j.$$.fragment,s),B(T.$$.fragment,s),B(H.$$.fragment,s),B(L.$$.fragment,s),B(z.$$.fragment,s),B(N.$$.fragment,s),B(R.$$.fragment,s),B(q.$$.fragment,s),B(X.$$.fragment,s),B(G.$$.fragment,s),B(V.$$.fragment,s),O=!1},d(s){s&&(a(n),a(r),a(C),a(ss),a(h),a(es),a(M),a(ns),a(x),a(as),a(g),a(ts),a(w),a(os),a(I),a(ps),a(Y),a(ls)),f(k),f(P,s),f(S,s),f(j),f(T),f(H),f(L,s),f(z,s),f(N,s),f(R),f(q),f(X,s),f(G,s),f(V,s)}}}function Ps(m,n,t){let p;return hs(m,ks,r=>t(0,p=r)),[p]}class Gs extends ws{constructor(n){super(),vs(this,n,Ps,Ms,Cs,{})}}export{Gs as component};
